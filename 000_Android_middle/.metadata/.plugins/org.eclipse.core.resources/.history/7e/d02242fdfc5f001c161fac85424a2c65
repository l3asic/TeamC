package controller;

import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.tools.ForwardingFileObject;
import javax.xml.ws.Response;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import com.google.gson.Gson;
import com.oreilly.servlet.MultipartRequest;

import action.Action;
import action.ActionForward;
import dto.AccDTO;
import dto.GridDTO;

@WebServlet("*.acc")
public class Test_AccController extends HttpServlet {

	Gson gson = new Gson();

	@Override
	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		String name;
		String path = req.getRealPath("/");
		System.out.println(path);
		MultipartRequest multi = new MultipartRequest(req, path, 300000);

		req.setCharacterEncoding("utf-8");
		res.setCharacterEncoding("utf-8");
		res.setContentType("text/html");
		PrintWriter out = res.getWriter();
		// initMybatis();
		if (req.getServletPath().equals("/dto.mini")) {

			String returnString = multi.getParameter("name1");
			System.out.println(returnString);

			AccDTO dto = gson.fromJson(returnString, AccDTO.class);

			signOn(dto);
		}
//		Action action = null;
//		ActionForward forward = null;
//		
//		forward = new ActionForward();
//		forward.setPath("signon.jsp");
//		
//		if(forward!=null) {
//			if (forward.isRedirect()) {
//				response

	}

//		PrintWriter out = res.getWriter();
//		out.print("ì•„!!!!!!!!" + returnString);
	public void signOn(AccDTO dto) {

		try {
			String resource = "mybatis/config.xml";
			InputStream inputStream;
			inputStream = Resources.getResourceAsStream(resource);
			SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);

			try (SqlSession session = sqlSessionFactory.openSession()) {
				int result = session.insert("org.mybatis.example.BlogMapper.SignOn", dto);
				session.commit();
				System.out.println(result);

				session.close();

			}

		} catch (IOException e) {
			e.printStackTrace();
		}

	}

}
