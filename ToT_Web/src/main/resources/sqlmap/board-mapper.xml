<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board.mapper">

<!-- 해당 댓글의 삭제 처리 -->
<delete id="comment_delete">
delete from tbl_reply where reply_sn = #{reply_sn}
</delete>

	<!-- 해당 댓글의 수정처리 -->
	<update id="comment_update">
		update tbl_reply set reply_content=#{reply_content} where reply_sn=#{reply_sn}
	</update>


	<!-- 댓글 저장 처리 -->
	<insert id="comment_insert">
		insert into board_comment(content, pid, writer)
		values (#{content}, #{pid}, #{writer})
	</insert>



	<sql id='where_search'>
		<!-- 제목에 '테스트' 문자가 있는 것을 조회한다면 where title like '테스트' -->
		<if test="search == 'title' or search == 'content'">
			where ${search} like '%'||#{keyword}||'%'
		</if>
		<!--   작성자에 '자' 문자가 있는 것을 조회한다면 member 테이블에서 like를 활용해 name 에 '자'를 포함한 글자를 찾을 수 있도록 함. -->
		<if test="search == 'writer'">
			where
			<include refid="search_writer" />
		</if>

		<if test="search == 'all' ">
			where title like '%'||#{keyword}||'%'
			or content like
			'%'||#{keyword}||'%'
			or
			<include refid="search_writer" />
		</if>
	</sql>

	<sql id='search_writer'>
		writer in (select id from member where name like
		'%'||#{keyword}||'%' )
	</sql>


	<!-- 전체 게시글 수 조회 -->
	<select id="totalList" resultType="integer">
		select count(*) from tbl_board 
		<include refid="where_search" />
	</select>

<!--  --><!--  --><!--  --><!--  --><!--  --><!--  --><!--  --><!--  --><!--  --><!--  -->
<!-- 댓글 목록 조회 -->
	<select id="reply_list"
		resultType="chaminhwan.board.ReplyVO">
		SELECT ROWNUM, a.* , (select count(*) from tbl_reply where board_sn = a.board_sn) reply_cnt
	  FROM ( SELECT reply.*, ( SELECT picture.picture_filepath   FROM tbl_board_picture picture WHERE picture.member_id = reply.member_id) member_filepath,
                          (select member.member_grade from tbl_member_info member where member.member_id = reply.member_id) member_grade 
        FROM tbl_reply reply
        WHERE board_sn = #{board_sn}
        ORDER BY reply_sn DESC ) a
  WHERE ROWNUM <![CDATA[ <= ]]> #{stack}
	</select>
	
	<!-- 댓글 insert -->
	<insert id="reply_insert" >
insert into tbl_reply (reply_sn, reply_content, board_sn ,member_id ) values (#{reply_sn},#{reply_content}, #{board_sn}, #{member_id} )
</insert>

	<!-- 방명록 글 수정 저장 처리 -->
	<update id="update">
		update tbl_board set board_title=#{board_title}, board_content=#{board_content}
		where board_sn = #{board_sn}
	</update>

	<!-- 해당 글 삭제 처리 -->
	<delete id="delete">
		delete from tbl_board
		where board_sn = #{board_sn}
	</delete>
	<!-- 해당 글의 상세 정보 조회 -->
	<select id="detail" resultType="chaminhwan.board.BoardVO">
		<!-- select * from tbl_board where board_sn = #{board_sn} -->
		
		SELECT ROWNUM, tbl.*,
    ( SELECT COUNT(*) FROM tbl_board board, tbl_likes likes
        WHERE board.board_sn = likes.board_sn AND likes.board_sn = tbl.board_sn
    ) function_like,
    ( SELECT COUNT(*) FROM tbl_board board, tbl_reply reply
        WHERE board.board_sn = reply.board_sn AND reply.board_sn = tbl.board_sn
    ) board_cnt_reply,
    ( SELECT picture.picture_filepath FROM tbl_board_picture picture
        WHERE picture.member_id = tbl.member_id
    ) member_filepath,
    ( select member.member_grade from tbl_member_info member where member.member_id = tbl.member_id
    ) member_grade,
    ( select count(*) from tbl_likes likes where likes.member_id = tbl.member_id
    ) function_like
FROM
    ( SELECT * FROM tbl_board
        where board_sn =#{board_sn}
        ORDER BY board_sn
    ) tbl
WHERE ROWNUM <![CDATA[ <= ]]> #{list_cnt_many} order by rownum
		<!-- <include refid="read"></include> -->
	</select>
		<!-- 해당 글의 조회수 증가 -->
	<update id="read">
		update tbl_board set board_read_cnt = board_read_cnt+1
		where board_sn = #{board_sn}
	</update>

	<!-- 방명록 신규 글 저장 -->
	<insert id="insert">
		insert into tbl_board (board_sn, board_title, board_content, board_class, member_id)
		values (seq_board_sn.nextval,#{board_title}, #{board_content}, #{board_class }, #{member_id})
	</insert>
	
	<!-- 전체 게시글 조회 -->
	<select id="list" resultType="chaminhwan.board.BoardVO">
SELECT ROWNUM, tbl.*,
    ( SELECT COUNT(*) FROM tbl_board board, tbl_likes likes
        WHERE board.board_sn = likes.board_sn  AND likes.board_sn = tbl.board_sn
    ) function_like,
    ( SELECT COUNT(*) FROM tbl_board board, tbl_reply reply
        WHERE board.board_sn = reply.board_sn AND reply.board_sn = tbl.board_sn
    ) board_cnt_reply,
    ( SELECT picture.picture_filepath FROM tbl_board_picture picture
        WHERE picture.member_id = tbl.member_id
    ) member_filepath,
    ( select member.member_grade from tbl_member_info member where member.member_id = tbl.member_id
    ) member_grade,
    ( select count(*) from tbl_likes likes where likes.member_id = tbl.member_id
    ) function_like
FROM
    ( SELECT * FROM tbl_board
        where board_class =#{board_class} and  board_reviewpath is  null
        ORDER BY board_sn desc
    ) tbl
WHERE ROWNUM <![CDATA[ <= ]]> #{list_cnt_many} order by rownum
	</select>
</mapper>