package com.hanul.study;

import java.net.URL;
import java.util.List;

import net.htmlparser.jericho.Element;
import net.htmlparser.jericho.HTMLElementName;
import net.htmlparser.jericho.Source;

public class HtmlParser {
	//Parser(구문분석) : 문장을 구성하는 어휘(토큰)를 분석하여, 일련의 패턴을 찾아 데이터를 읽어오는 행위
	//사용 예 : 서버측에서 데이터(JSON, xml)를 제공하지 않을경우, 구문분석을 통하여 강제로 데이터를 가져온다.
	//동작원리 : 웹브라저에 출력되는 모든 내용을 반드시 태그로 감싸져 있다. 
	//			 시작태그와 마감태그 사이의 텍스트(데이터)를 긁어온다(?)
	//Jericho Html Parser ▶ jericho-html-3.4.jar > WebContent > WEB-INF > lib
	public static void main(String[] args) {
		try {
			String addr = "https://sum.su.or.kr:8888/bible/today";
			URL url = new URL(addr);
			Source source = new Source(url);	//html 원본소스를 가져온다.
			//System.out.println(source);
			List<Element> list = source.getAllElements(HTMLElementName.DIV);	//원본소스에서 div 태그만 가져온다.
			//System.out.println("List의 개수 : " + list.size());
			
			String html1 = null;	//날짜(date)
			
			for(int i = 0; i < list.size(); i++) {
				String data = list.get(i).getContent().toString();
				//System.out.println(data);
				
				if(data.contains("id=\"dailybible_info\">")) {
					html1 = data;
				}
			}//for
			
			System.out.println(html1);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}//main()
}//class
