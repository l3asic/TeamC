<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mbti.mapper">

<!-- user끼리 매칭점수 -->
<select id="matching_user" resultType="String">
SELECT
    100 - ( abs(a.mbti_activity - b.mbti_activity) + abs(a.mbti_festival - b.mbti_festival) + abs(a.mbti_tour - b.mbti_tour) + abs(a.
    mbti_solo - b.mbti_solo) + abs(a.mbti_couple - b.mbti_couple) + abs(a.mbti_buddys - b.mbti_buddys) + abs(a.mbti_family - b.mbti_family) +
    abs(a.mbti_price - b.mbti_price) + abs(a.mbti_sd - b.mbti_sd) + abs(a.mbti_io - b.mbti_io)  )* 2.5 AS matchscore
FROM
    ( SELECT * FROM tbl_mbti WHERE member_id = #{my_member_id} ) a,
    ( SELECT * FROM tbl_mbti WHERE member_id = #{whose_member_id} ) b
</select>

<!-- 여행지 매칭점수 -->
<select id="matching_where" resultType="String">
SELECT
    100 - ( abs(a.mbti_activity - b.mbti_activity) + abs(a.mbti_festival - b.mbti_festival) + abs(a.mbti_tour - b.mbti_tour) + abs(a.
    mbti_solo - b.mbti_solo) + abs(a.mbti_couple - b.mbti_couple) + abs(a.mbti_buddys - b.mbti_buddys) + abs(a.mbti_family - b.mbti_family) +
    abs(a.mbti_price - b.mbti_price) + abs(a.mbti_sd - b.mbti_sd) + abs(a.mbti_io - b.mbti_io)  )* 2.5 AS matchscore
FROM
    ( SELECT * FROM tbl_mbti WHERE member_id = #{my_member_id} ) a,
    ( SELECT * FROM tbl_mbti WHERE board_sn = #{where_board_sn} and rownum=1) b
</select>

<!--  -->
<select id="/mbti_mbti" resultType="chaminhwan.board.BoardVO">
SELECT top100.* , (
        SELECT COUNT(*)
        FROM tbl_board board,tbl_likes likes    <!-- ========== 좋아요 null 이어도 됨 ========== -->
        WHERE board.board_sn = likes.board_sn <!-- AND likes.function_like IS NOT NULL --> AND likes.board_sn = top100.board_sn
    ) "function_like",
          (select pic.picture_filepath from tbl_board_picture pic where pic.board_sn = top100.board_sn and rownum=1) picture_filepath ,  (
        SELECT COUNT(*)
        FROM tbl_board board, tbl_reply reply
        WHERE board.board_sn = reply.board_sn AND reply.board_sn = top100.board_sn
    ) "board_cnt_reply" ,( SELECT picture.picture_filepath
        FROM tbl_board board, tbl_board_picture picture WHERE board.board_sn = picture.board_sn AND picture.board_sn = top100.board_sn and rownum=1) "picture_filepath" 
FROM
    ( SELECT ROWNUM, mbti.* 
    FROM 
        ( SELECT   board.*,
                  100-(
                   abs(a.mbti_activity - b.mbti_activity) + abs(a.mbti_festival - b.mbti_festival) + abs(a.mbti_tour - b.mbti_tour) +
                    abs(a.mbti_solo - b.mbti_solo) + abs(a.mbti_couple - b.mbti_couple) + abs(a.mbti_buddys - b.mbti_buddys) + abs(a.
                    mbti_family - b.mbti_family) + abs(a.mbti_price - b.mbti_price) + abs(a.mbti_sd - b.mbti_sd) + abs(a.mbti_io - b.
                    mbti_io) 
                    )AS matchscore
            FROM
                    ( SELECT *
                        FROM tbl_mbti
                        WHERE member_id = #{member_id}
                    ) a,
                    ( SELECT *
                        FROM tbl_mbti
                        WHERE member_id IS NULL
                    ) b,
                tbl_board board
                WHERE board.board_sn = b.board_sn
                ORDER BY matchscore
            ) mbti
        WHERE ROWNUM <![CDATA[ <= ]]> 100
        ORDER BY dbms_random.value( 1, 1000 )
    ) top100
 WHERE ROWNUM <![CDATA[ <= ]]> 10
ORDER BY matchscore desc
</select>


<select id="/mbti_xy" resultType="chaminhwan.board.BoardVO">
SELECT top100.* , (
        SELECT COUNT(*)
        FROM tbl_board board,tbl_likes likes 	 <!-- ========== 좋아요 null 이어도 됨 ========== -->
        WHERE board.board_sn = likes.board_sn <!-- AND likes.function_like IS NOT NULL --> AND likes.board_sn = top100.board_sn
    ) "function_like" ,  (
        SELECT COUNT(*)
        FROM tbl_board board, tbl_reply reply
        WHERE board.board_sn = reply.board_sn AND reply.board_sn = top100.board_sn
    ) "board_cnt_reply" , ( SELECT picture.picture_filepath
        FROM tbl_board board, tbl_board_picture picture
        WHERE board.board_sn = picture.board_sn AND picture.board_sn = top100.board_sn) "picture_filepath"
FROM
    ( SELECT ROWNUM, mbti.* 
    FROM 
        ( SELECT   board.*,
                    abs(a.mbti_x - b.mbti_x) + abs(a.mbti_y - b.mbti_y)  AS matchscore
            FROM
                    ( SELECT *
                        FROM tbl_mbti
                        WHERE member_id = #{member_id}
                    ) a,
                    ( SELECT *
                        FROM tbl_mbti
                        WHERE member_id IS NULL
                    ) b,
                tbl_board board
                WHERE board.board_sn = b.board_sn
                ORDER BY matchscore
            ) mbti
        WHERE ROWNUM <![CDATA[ <= ]]> 100
        ORDER BY dbms_random.value( 1, 1000 )
    ) top100
 WHERE ROWNUM <![CDATA[ <= ]]> 10
ORDER BY matchscore
</select>

<!-- ================================================== 랜덤 ================================================== -->

<select id="recommend_likes" resultType="chaminhwan.board.BoardVO">
select *
from (select board.* ,(
        SELECT COUNT(*)
        FROM tbl_likes likes   
        WHERE board.board_sn = likes.board_sn 
    ) "function_like" 
    		,(
    		select count(*)
    		from tbl_reply reply
    		where board.board_sn = reply.board_sn 
    		) "board_cnt_reply"
from tbl_board board
where board_class = 'tour' or board_class =   'activiti' or board_class =  'festival' 
order by "function_like" desc ) 
where   ROWNUM <![CDATA[ <= ]]> 10
</select>

<select id="/mbti_mbti_random" resultType="chaminhwan.board.BoardVO">
SELECT top100.* , (
        SELECT COUNT(*)
        FROM tbl_board board,tbl_likes likes    <!-- ========== 좋아요 null 이어도 됨 ========== -->
        WHERE board.board_sn = likes.board_sn <!-- AND likes.function_like IS NOT NULL --> AND likes.board_sn = top100.board_sn
    ) "function_like" ,  (
        SELECT COUNT(*)
        FROM tbl_board board, tbl_reply reply
        WHERE board.board_sn = reply.board_sn AND reply.board_sn = top100.board_sn
    ) "board_cnt_reply" ,( SELECT picture.picture_filepath
        FROM tbl_board board, tbl_board_picture picture WHERE board.board_sn = picture.board_sn AND picture.board_sn = top100.board_sn) "picture_filepath" 
FROM
    ( SELECT ROWNUM, mbti.* 
    FROM 
        ( SELECT   board.*,
                  100-(
                   abs(a.mbti_activity - b.mbti_activity) + abs(a.mbti_festival - b.mbti_festival) + abs(a.mbti_tour - b.mbti_tour) +
                    abs(a.mbti_solo - b.mbti_solo) + abs(a.mbti_couple - b.mbti_couple) + abs(a.mbti_buddys - b.mbti_buddys) + abs(a.
                    mbti_family - b.mbti_family) + abs(a.mbti_price - b.mbti_price) + abs(a.mbti_sd - b.mbti_sd) + abs(a.mbti_io - b.
                    mbti_io) 
                    )AS matchscore
            FROM
                    ( SELECT *
                        FROM tbl_mbti
                        <!-- WHERE member_id = #{member_id} -->
                    ) a,
                    ( SELECT *
                        FROM tbl_mbti
                        WHERE member_id IS NULL
                    ) b,
                tbl_board board
                WHERE board.board_sn = b.board_sn
                ORDER BY matchscore
            ) mbti
        WHERE ROWNUM <![CDATA[ <= ]]> 100
        ORDER BY dbms_random.value( 1, 1000 )
    ) top100
 WHERE ROWNUM <![CDATA[ <= ]]> 10
ORDER BY matchscore
</select>

</mapper>